"""add category model

Revision ID: c7cd0873463d
Revises: 128524a363fe
Create Date: 2025-02-14 11:42:08.990960

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c7cd0873463d'
down_revision: Union[str, None] = '128524a363fe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_unique_constraint(None, 'categories', ['name'])
    op.add_column('email_analytics', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('email_analytics', sa.Column('stress_score', sa.Float(), nullable=True))
    op.add_column('email_analytics', sa.Column('priority_score', sa.Float(), nullable=True))
    op.add_column('email_analytics', sa.Column('sentiment_score', sa.Float(), nullable=True))
    op.add_column('email_analytics', sa.Column('analysis_data', sa.JSON(), nullable=True))
    op.create_foreign_key(None, 'email_analytics', 'users', ['user_id'], ['id'])
    op.drop_column('email_analytics', 'created_at')
    op.drop_column('email_analytics', 'interaction_metrics')
    op.drop_column('email_analytics', 'response_time')
    op.drop_column('email_analytics', 'updated_at')
    op.add_column('emails', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'emails', 'categories', ['category_id'], ['id'])
    op.drop_column('user_analytics', 'updated_at')
    op.drop_column('user_analytics', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_analytics', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('user_analytics', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'emails', type_='foreignkey')
    op.drop_column('emails', 'category_id')
    op.add_column('email_analytics', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('email_analytics', sa.Column('response_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('email_analytics', sa.Column('interaction_metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('email_analytics', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'email_analytics', type_='foreignkey')
    op.drop_column('email_analytics', 'analysis_data')
    op.drop_column('email_analytics', 'sentiment_score')
    op.drop_column('email_analytics', 'priority_score')
    op.drop_column('email_analytics', 'stress_score')
    op.drop_column('email_analytics', 'user_id')
    op.drop_constraint(None, 'categories', type_='unique')
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
